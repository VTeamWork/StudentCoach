
CREATE TABLE tbl_APPLICATION
(
  APPLICATION_ID    int NOT NULL identity(1, 1) primary key,
  APPLICATION_NAME  VARCHAR(50),
  APPLICATION_DESC  VARCHAR(300),
  UPDATE_ID         CHAR(36),
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATETIME,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATETIME
);

CREATE TABLE tbl_MENU_GROUP
(
  MENU_GROUP_ID         int NOT NULL identity(1, 1) primary key,
  MENU_GROUP_NAME       VARCHAR(50),
  PARENT_MENU_GROUP_ID  int,
  UPDATE_ID             CHAR(36),
  MENU_GROUP_SEQ        int,
  CREATED_BY            VARCHAR(50),
  CREATED_ON            DATETIME,
  UPDATED_BY            VARCHAR(50),
  UPDATED_ON            DATETIME
);


CREATE TABLE tbl_PAGE
(
  PAGE_ID         int NOT NULL identity(1, 1) primary key,
  PAGE_NAME       VARCHAR(50),
  PAGE_PATH       VARCHAR(250),
  APPLICATION_ID  int                    NOT NULL,
  MENU_GROUP_ID   int,
  PAGE_TYPE       VARCHAR(50),
  UPDATE_ID       CHAR(36),
  PAGE_SEQ        int,
  CREATED_BY      VARCHAR(50),
  CREATED_ON      DATE,
  UPDATED_BY      VARCHAR(50),
  UPDATED_ON      DATE,
  FOREIGN KEY (APPLICATION_ID) REFERENCES tbl_APPLICATION(APPLICATION_ID),
  FOREIGN KEY (MENU_GROUP_ID) REFERENCES tbl_MENU_GROUP(MENU_GROUP_ID),
);


CREATE TABLE tbl_USER_TYPE
(
  USER_TYPE_ID              int NOT NULL identity(1, 1) primary key,
  USER_TYPE					 VARCHAR(50),
  CREATED_BY           VARCHAR(50),
  CREATED_ON           DATE,
  UPDATED_BY           VARCHAR(50),
  UPDATED_ON           DATETIME
  );

  ALTER TABLE TBL_USER ADD USER_TYPE_ID INT;
  ALTER TABLE TBL_USER ADD FOREIGN KEY (USER_TYPE_ID) REFERENCES tbl_USER_TYPE(USER_TYPE_ID);

  ALTER TABLE TBL_USER ADD TEAM_ID INT;

    ALTER TABLE TBL_USER ADD FOREIGN KEY (TEAM_ID) REFERENCES tbl_TEAM(TEAM_ID);


CREATE TABLE tbl_USER
(
  USER_ID              int NOT NULL identity(1, 1) primary key,
  USER_NAME            VARCHAR(50),
  LOGIN_ID             VARCHAR(50),
  PASSWORD             VARCHAR(512),
  EMAIL                VARCHAR(50),
  MOBILE_NO            VARCHAR(20),
  PHONE_NUMBER_EXT     VARCHAR(20),
  USER_TYPE            VARCHAR(50),
  RETRY_COUNT          int,
  IS_DELETED           CHAR(1),
  IS_ACTIVE            CHAR(1),
  UPDATE_ID            CHAR(36),
  CREATED_BY           VARCHAR(50),
  CREATED_ON           DATE,
  UPDATED_BY           VARCHAR(50),
  UPDATED_ON           DATETIME,
  PWD_LASTUPDDATE      DATETIME,
  PASSWORD_EXPIRYDATE  DATETIME,
  MAKE_ID              int,
  DEPT_NAME            VARCHAR(100),
  USER_CLASS           VARCHAR(50),
  CNIC                 VARCHAR(15),
  DESIGNATION          VARCHAR(50),
  CITY                 VARCHAR(20),
  COUNTRY              VARCHAR(50),
  DATE_OF_BIRTH        DATETIME,
  MOTHER_MAIDEN_NAME   VARCHAR(50),
  LAST_LOGIN           DATETIME,
  EMPLOYEE_NO          VARCHAR(100)
);


CREATE TABLE tbl_ROLE
(
  ROLE_ID          int NOT NULL identity(1, 1) primary key,
  ROLE_NAME        VARCHAR(50),
  ROLE_DESC        VARCHAR(300),
  APPLICATION_ID   int                   NOT NULL,
  MANAGER_ROLE_ID  int,
  IS_DELETED       CHAR(1),
  UPDATE_ID        CHAR(36),
  CREATED_BY       VARCHAR(50),
  CREATED_ON       DATE,
  UPDATED_BY       VARCHAR(50),
  UPDATED_ON       DATE,
  MAKE_ID          INT,
   FOREIGN KEY (APPLICATION_ID) REFERENCES tbl_APPLICATION(APPLICATION_ID),
);


CREATE TABLE tbl_USER_ROLE
(
	USER_ROLE_ID          int NOT NULL identity(1, 1) primary key,
  ROLE_ID     int,
  USER_ID     int,
  UPDATE_ID   CHAR(36),
  CREATED_BY  VARCHAR(50),
  CREATED_ON  DATE,
  UPDATED_BY  VARCHAR(50),
  UPDATED_ON  DATE,
   FOREIGN KEY (ROLE_ID) REFERENCES tbl_ROLE(ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES tbl_USER(USER_ID),
);



CREATE TABLE tbl_ROLE_PAGE
(
  ROLE_PAGE_ID          int NOT NULL identity(1, 1) primary key,
  ROLE_ID     int,
  PAGE_ID     int,
  CAN_ADD     CHAR(1),
  CAN_EDIT    CHAR(1),
  CAN_DELETE  CHAR(1),
  UPDATE_ID   CHAR(36),
  CREATED_BY  VARCHAR(50),
  CREATED_ON  DATE,
  UPDATED_BY  VARCHAR(50),
  UPDATED_ON  DATE,
  MAKE_ID     INT,
  FOREIGN KEY (ROLE_ID) REFERENCES tbl_ROLE(ROLE_ID),
  FOREIGN KEY (PAGE_ID) REFERENCES tbl_PAGE(PAGE_ID),
);

CREATE TABLE tbl_ROLE_RESTRICT
( RESTRICT_ROLE_ID          int NOT NULL identity(1, 1) primary key,
  ROLE_ID           INT                  NOT NULL,
  UPDATE_ID         CHAR(36),
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATE,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATE,
  MAKE_ID           INT,
   FOREIGN KEY (ROLE_ID) REFERENCES tbl_ROLE(ROLE_ID)
);

CREATE TABLE tbl_TEAM
( TEAM_ID          int NOT NULL identity(1, 1) primary key,
  TEAM_NAME        VARCHAR(100),
  TEAM_DESCRITION        VARCHAR(100),
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATE,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATE
);

CREATE TABLE tbl_MODULE
( MODULE_ID          int NOT NULL identity(1, 1) primary key,
  MODULE_NAME        VARCHAR(100),
  MODULE_DESCRITION        VARCHAR(100),
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATE,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATE
);



CREATE TABLE tbl_QUESTION
( QUESTION_ID          int NOT NULL identity(1, 1) primary key,
  QUESTION_NAME        VARCHAR(100),
  QUESTION_DESCRITION        VARCHAR(100),
  USER_ID		int,
  MODULE_ID		int,
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATE,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATE,
  FOREIGN KEY (USER_ID) REFERENCES tbl_USER(USER_ID),
  FOREIGN KEY (MODULE_ID) REFERENCES tbl_MODULE(MODULE_ID),
);

CREATE TABLE tbl_ANSWER
( ANSWER_ID          int NOT NULL identity(1, 1) primary key,
  QUESTION_NAME        VARCHAR(100),
  QUESTION_DESCRITION        VARCHAR(100),
  QUESTION_ID		int,
  CREATED_BY        VARCHAR(50),
  CREATED_ON        DATE,
  UPDATED_BY        VARCHAR(50),
  UPDATED_ON        DATE,
  FOREIGN KEY (QUESTION_ID) REFERENCES tbl_QUESTION(QUESTION_ID),
);

